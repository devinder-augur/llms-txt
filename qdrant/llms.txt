# QDrant Documentation

> QDrant Documentation


## Qdrant Overview
- [Home - Qdrant](https://qdrant.tech/documentation/): Qdrant is an Open-Source Vector Database and Vector Search Engine written in Rust. It provides fast and scalable vector similarity search service with convenient API.
- [What is Qdrant? - Qdrant](https://qdrant.tech/documentation/overview/): Qdrant is an Open-Source Vector Database and Vector Search Engine written in Rust. It provides fast and scalable vector similarity search service with convenient API.
- [Qdrant Fundamentals - Qdrant](https://qdrant.tech/documentation/faq/qdrant-fundamentals/): Qdrant is an Open-Source Vector Database and Vector Search Engine written in Rust. It provides fast and scalable vector similarity search service with convenient API.
- [Getting Started - Qdrant](https://qdrant.tech/documentation/cloud/getting-started/): Qdrant is an Open-Source Vector Database and Vector Search Engine written in Rust. It provides fast and scalable vector similarity search service with convenient API.
- [Local Quickstart - Qdrant](https://qdrant.tech/documentation/quickstart/): Qdrant is an Open-Source Vector Database and Vector Search Engine written in Rust. It provides fast and scalable vector similarity search service with convenient API.
- [Cloud Quickstart - Qdrant](https://qdrant.tech/documentation/quickstart-cloud/): Qdrant is an Open-Source Vector Database and Vector Search Engine written in Rust. It provides fast and scalable vector similarity search service with convenient API.
- [Local Quickstart - Qdrant](https://qdrant.tech/documentation/quickstart/): Qdrant is an Open-Source Vector Database and Vector Search Engine written in Rust. It provides fast and scalable vector similarity search service with convenient API.

## Articles and Guides
- [Distance-based data exploration - Qdrant](https://qdrant.tech/articles/distance-based-exploration/): Explore your data under a new angle with Qdrant's tools for dimensionality reduction, clusterization, and visualization.
- [Modern Sparse Neural Retrieval: From Theory to Practice - Qdrant](https://qdrant.tech/articles/modern-sparse-neural-retrieval/): A comprehensive guide to modern sparse neural retrievers: COIL, TILDEv2, SPLADE, and more. Find out how they work and learn how to use them effectively.
- [An Introduction to Vector Databases - Qdrant](https://qdrant.tech/articles/what-is-a-vector-database/): Discover what a vector database is, its core functionalities, and real-world applications.
- [What is Vector Quantization? - Qdrant](https://qdrant.tech/articles/what-is-vector-quantization/): In this article, we'll teach you about compression methods like Scalar, Product, and Binary Quantization. Learn how to choose the best method for your specific application.
- [Vector Search Resource Optimization Guide - Qdrant](https://qdrant.tech/articles/vector-search-resource-optimization/): Learn how to get the most from Qdrant's optimization features. Discover key tricks and best practices to boost vector search performance and reduce Qdrant's resource usage.
- [A Complete Guide to Filtering in Vector Search - Qdrant](https://qdrant.tech/articles/vector-search-filtering/): Learn everything about filtering in Qdrant. Discover key tricks and best practices to boost semantic search performance and reduce Qdrant's resource usage.
- [Qdrant Internals: Immutable Data Structures - Qdrant](https://qdrant.tech/articles/immutable-data-structures/): Learn how immutable data structures improve vector search performance in Qdrant.
- [Relevance Feedback in Informational Retrieval - Qdrant](https://qdrant.tech/articles/search-feedback-loop/): Relerance feedback: from ancient history to LLMs. Why relevance feedback techniques are good on paper but not popular in neural search, and what we can do about it.
- [Built for Vector Search - Qdrant](https://qdrant.tech/articles/dedicated-vector-search/): Why add-on vector search looks good — until you actually use it.
- [Any* Embedding Model Can Become a Late Interaction Model... If You Give It a Chance! - Qdrant](https://qdrant.tech/articles/late-interaction-models/): We recently discovered that embedding models can become late interaction models & can perform surprisingly well in some scenarios. See what we learned here.
- [Optimizing Memory for Bulk Uploads - Qdrant](https://qdrant.tech/articles/indexing-optimization/): Efficient memory management is key when handling large-scale vector data. Learn how to optimize memory consumption during bulk uploads in Qdrant and keep your deployments performant under heavy load.
- [Introducing Gridstore: Qdrant's Custom Key-Value Store - Qdrant](https://qdrant.tech/articles/gridstore-key-value-storage/): Why and how we built our own key-value store. A short technical report on our procedure and results.
- [What is Agentic RAG? Building Agents with Qdrant - Qdrant](https://qdrant.tech/articles/agentic-rag/): Agents are a new paradigm in AI, and they are changing how we build RAG systems. Learn how to build agents with Qdrant and which framework to choose.
- [Hybrid Search Revamped - Building with Qdrant's Query API - Qdrant](https://qdrant.tech/articles/hybrid-search/): Our new Query API allows you to build a hybrid search system that uses different search methods to improve search quality & experience. Learn more here.
- [What is RAG: Understanding Retrieval-Augmented Generation - Qdrant](https://qdrant.tech/articles/what-is-rag-in-ai/): Explore how RAG enables LLMs to retrieve and utilize relevant external data when generating responses, rather than being limited to their original training data alone.
- [BM42: New Baseline for Hybrid Search - Qdrant](https://qdrant.tech/articles/bm42/): Introducing BM42 - a new sparse embedding approach, which combines the benefits of exact keyword search with the intelligence of transformers.
- [Qdrant 1.8.0: Enhanced Search Capabilities for Better Results - Qdrant](https://qdrant.tech/articles/qdrant-1.8.x/): Explore the latest in search technology with Qdrant 1.8.0! Discover faster performance, smarter indexing, and enhanced search capabilities.
- [Optimizing RAG Through an Evaluation-Based Methodology - Qdrant](https://qdrant.tech/articles/rapid-rag-optimization-with-qdrant-and-quotient/): Learn how Qdrant-powered RAG applications can be tested and iteratively improved using LLM evaluation tools like Quotient.
- [Is RAG Dead? The Role of Vector Databases in Vector Search | Qdrant - Qdrant](https://qdrant.tech/articles/rag-is-dead/): Uncover the necessity of vector databases for RAG and learn how Qdrant's vector database empowers enterprise AI with unmatched accuracy and cost-effectiveness.
- [Optimizing OpenAI Embeddings: Enhance Efficiency with Qdrant's Binary Quantization - Qdrant](https://qdrant.tech/articles/binary-quantization-openai/): Explore how Qdrant's Binary Quantization can significantly improve the efficiency and performance of OpenAI's Ada-003 embeddings. Learn best practices for real-time search applications.
- [How to Implement Multitenancy and Custom Sharding in Qdrant - Qdrant](https://qdrant.tech/articles/multitenancy/): Discover how multitenancy and custom sharding in Qdrant can streamline your machine-learning operations. Learn how to scale efficiently and manage data securely.
- [Data Privacy with Qdrant: Implementing Role-Based Access Control (RBAC) - Qdrant](https://qdrant.tech/articles/data-privacy/): Discover how Qdrant's Role-Based Access Control (RBAC) ensures data privacy and compliance for your AI applications. Build secure and scalable systems with ease. Read more now!
- [Discovery needs context - Qdrant](https://qdrant.tech/articles/discovery-search/): Discovery Search, an innovative way to constrain the vector space in which a search is performed, relying only on vectors.
- [What are Vector Embeddings? - Revolutionize Your Search Experience - Qdrant](https://qdrant.tech/articles/what-are-embeddings/): Discover the power of vector embeddings. Learn how to harness the potential of numerical machine learning representations to create a personalized Neural Search Service with FastEmbed.
- [What is a Sparse Vector? How to Achieve Vector-based Hybrid Search - Qdrant](https://qdrant.tech/articles/sparse-vectors/): Learn what sparse vectors are, how they work, and their importance in modern data processing. Explore methods like SPLADE for creating and leveraging sparse vectors efficiently.
- [Qdrant 1.7.0 has just landed! - Qdrant](https://qdrant.tech/articles/qdrant-1.7.x/): Sparse vectors, Discovery API, user-defined sharding, and snapshot-based shard transfer. That's what you can find in the latest Qdrant 1.7.0 release!
- [Deliver Better Recommendations with Qdrant’s new API - Qdrant](https://qdrant.tech/articles/new-recommendation-api/): Qdrant 1.6 brings recommendations strategies and more flexibility to the Recommendation API.
- [Vector Search as a dedicated service - Qdrant](https://qdrant.tech/articles/dedicated-service/): Why vector search requires a dedicated service.
- [FastEmbed: Qdrant's Efficient Python Library for Embedding Generation - Qdrant](https://qdrant.tech/articles/fastembed/): Learn how to accurately and efficiently create text embeddings with FastEmbed.
- [Google Summer of Code 2023 - Polygon Geo Filter for Qdrant Vector Database - Qdrant](https://qdrant.tech/articles/geo-polygon-filter-gsoc/): A Summary of my work and experience at Qdrant's Gsoc '23.
- [Google Summer of Code 2023 - Web UI for Visualization and Exploration - Qdrant](https://qdrant.tech/articles/web-ui-gsoc/): My journey as a Google Summer of Code 2023 student working on the "Web UI for Visualization and Exploration" project for Qdrant.
- [Qdrant Summer of Code 2024 - WASM based Dimension Reduction - Qdrant](https://qdrant.tech/articles/dimension-reduction-qsoc/): My journey as a Qdrant Summer of Code 2024 participant working on enhancing vector visualization using WebAssembly (WASM) based dimension reduction.
- [Semantic Search As You Type - Qdrant](https://qdrant.tech/articles/search-as-you-type/): To show off Qdrant's performance, we show how to do a quick search-as-you-type that will come back within a few milliseconds.
- [Vector Similarity: Going Beyond Full-Text Search | Qdrant - Qdrant](https://qdrant.tech/articles/vector-similarity-beyond-search/): Discover how vector similarity expands data exploration beyond full-text search. Explore diversity sampling and more for enhanced data discovery!
- [Serverless Semantic Search - Qdrant](https://qdrant.tech/articles/serverless/): Create a serverless semantic search engine using nothing but Qdrant and free cloud services.
- [Food Discovery Demo - Qdrant](https://qdrant.tech/articles/food-discovery-demo/): Feeling hungry? Find the perfect meal with Qdrant's multimodal semantic search.
- [On Unstructured Data, Vector Databases, New AI Age, and Our Seed Round. - Qdrant](https://qdrant.tech/articles/seed-round/): We announce Qdrant seed round investment and share our thoughts on Vector Databases and New AI Age.
- [Using LangChain for Question Answering with Qdrant - Qdrant](https://qdrant.tech/articles/langchain-integration/): We combined LangChain, a pre-trained LLM from OpenAI, SentenceTransformers & Qdrant to create a question answering system with just a few lines of code. Learn more!
- [Extending ChatGPT with a Qdrant-based knowledge base - Qdrant](https://qdrant.tech/articles/chatgpt-plugin/): ChatGPT factuality might be improved with semantic search. Here is how.
- [Question Answering as a Service with Cohere and Qdrant - Qdrant](https://qdrant.tech/articles/qa-with-cohere-and-qdrant/): End-to-end Question Answering system for the biomedical data with SaaS tools: Cohere co.embed API and Qdrant
- [Minimal RAM you need to serve a million vectors - Qdrant](https://qdrant.tech/articles/memory-consumption/): How to properly measure RAM usage and optimize Qdrant for memory consumption.

## Qdrant Documentation
- [Bulk Upload Vectors - Qdrant](https://qdrant.tech/documentation/database-tutorials/bulk-upload/): Qdrant is an Open-Source Vector Database and Vector Search Engine written in Rust. It provides fast and scalable vector similarity search service with convenient API.
- [Create & Restore Snapshots - Qdrant](https://qdrant.tech/documentation/database-tutorials/create-snapshot/): Qdrant is an Open-Source Vector Database and Vector Search Engine written in Rust. It provides fast and scalable vector similarity search service with convenient API.
- [Large Scale Search - Qdrant](https://qdrant.tech/documentation/database-tutorials/large-scale-search/): Qdrant is an Open-Source Vector Database and Vector Search Engine written in Rust. It provides fast and scalable vector similarity search service with convenient API.
- [Automate filtering with LLMs - Qdrant](https://qdrant.tech/documentation/database-tutorials/automate-filtering-with-llms/): Qdrant is an Open-Source Vector Database and Vector Search Engine written in Rust. It provides fast and scalable vector similarity search service with convenient API.
- [Build a Neural Search Service - Qdrant](https://qdrant.tech/documentation/beginner-tutorials/neural-search/): Qdrant is an Open-Source Vector Database and Vector Search Engine written in Rust. It provides fast and scalable vector similarity search service with convenient API.
- [Setup Hybrid Search with FastEmbed - Qdrant](https://qdrant.tech/documentation/beginner-tutorials/hybrid-search-fastembed/): Qdrant is an Open-Source Vector Database and Vector Search Engine written in Rust. It provides fast and scalable vector similarity search service with convenient API.
- [Build a Recommendation System with Collaborative Filtering - Qdrant](https://qdrant.tech/documentation/advanced-tutorials/collaborative-filtering/): Build an effective movie recommendation system using collaborative filtering and Qdrant's similarity search.
- [Scaling PDF Retrieval with Qdrant - Qdrant](https://qdrant.tech/documentation/advanced-tutorials/pdf-retrieval-at-scale/): Optimizing PDF retrieval at scale with Qdrant and Vision Large Language Models (VLLMs) such as ColPali and ColQwen. Two-stage retrieval with multivector representations mean pooling.
- [Search Through Your Codebase - Qdrant](https://qdrant.tech/documentation/advanced-tutorials/code-search/): Qdrant is an Open-Source Vector Database and Vector Search Engine written in Rust. It provides fast and scalable vector similarity search service with convenient API.
- [Setup Hybrid Cloud - Qdrant](https://qdrant.tech/documentation/hybrid-cloud/hybrid-cloud-setup/): Qdrant is an Open-Source Vector Database and Vector Search Engine written in Rust. It provides fast and scalable vector similarity search service with convenient API.
- [Setup Private Cloud - Qdrant](https://qdrant.tech/documentation/private-cloud/private-cloud-setup/): Qdrant is an Open-Source Vector Database and Vector Search Engine written in Rust. It provides fast and scalable vector similarity search service with convenient API.
- [Create a Cluster - Qdrant](https://qdrant.tech/documentation/hybrid-cloud/hybrid-cloud-cluster-creation/): Qdrant is an Open-Source Vector Database and Vector Search Engine written in Rust. It provides fast and scalable vector similarity search service with convenient API.
- [Managing a Cluster - Qdrant](https://qdrant.tech/documentation/private-cloud/qdrant-cluster-management/): Qdrant is an Open-Source Vector Database and Vector Search Engine written in Rust. It provides fast and scalable vector similarity search service with convenient API.
- [Logging & Monitoring - Qdrant](https://qdrant.tech/documentation/private-cloud/logging-monitoring/): Qdrant is an Open-Source Vector Database and Vector Search Engine written in Rust. It provides fast and scalable vector similarity search service with convenient API.
- [Networking, Logging & Monitoring - Qdrant](https://qdrant.tech/documentation/hybrid-cloud/networking-logging-monitoring/): Qdrant is an Open-Source Vector Database and Vector Search Engine written in Rust. It provides fast and scalable vector similarity search service with convenient API.
- [Backups - Qdrant](https://qdrant.tech/documentation/private-cloud/backups/): Qdrant is an Open-Source Vector Database and Vector Search Engine written in Rust. It provides fast and scalable vector similarity search service with convenient API.
- [https://qdrant.tech/documentation/private-cloud/role-management/](https://qdrant.tech/documentation/private-cloud/role-management/)
- [User Management - Qdrant](https://qdrant.tech/documentation/cloud-rbac/user-management/): Qdrant is an Open-Source Vector Database and Vector Search Engine written in Rust. It provides fast and scalable vector similarity search service with convenient API.
- [Permission Reference - Qdrant](https://qdrant.tech/documentation/cloud-rbac/permission-reference/): Qdrant is an Open-Source Vector Database and Vector Search Engine written in Rust. It provides fast and scalable vector similarity search service with convenient API.
- [Early Access FAQ - Qdrant](https://qdrant.tech/documentation/cloud-rbac/early-access-faq/): Qdrant is an Open-Source Vector Database and Vector Search Engine written in Rust. It provides fast and scalable vector similarity search service with convenient API.
- [API Reference - Qdrant](https://qdrant.tech/documentation/private-cloud/api-reference/): Qdrant is an Open-Source Vector Database and Vector Search Engine written in Rust. It provides fast and scalable vector similarity search service with convenient API.
- [Changelog - Qdrant](https://qdrant.tech/documentation/private-cloud/changelog/): Qdrant is an Open-Source Vector Database and Vector Search Engine written in Rust. It provides fast and scalable vector similarity search service with convenient API.
- [API & SDKs - Qdrant](https://qdrant.tech/documentation/interfaces/): Qdrant is an Open-Source Vector Database and Vector Search Engine written in Rust. It provides fast and scalable vector similarity search service with convenient API.
- [Installation - Qdrant](https://qdrant.tech/documentation/guides/installation/): Qdrant is an Open-Source Vector Database and Vector Search Engine written in Rust. It provides fast and scalable vector similarity search service with convenient API.

## Benchmarks
- [How vector search should be benchmarked? - Qdrant](https://qdrant.tech/benchmarks/benchmarks-intro/): Qdrant is an Open-Source Vector Database and Vector Search Engine written in Rust. It provides fast and scalable vector similarity search service with convenient API.
- [Single node benchmarks - Qdrant](https://qdrant.tech/benchmarks/single-node-speed-benchmark/): We benchmarked several vector databases using various configurations of them on different datasets to check how the results may vary. Those datasets may have different vector dimensionality but also vary in terms of the distance function being used. We also tried to capture the difference we can expect while using some different configuration parameters, for both the engine itself and the search operation separately. </br> </br> <b> Updated: January/June 2024 </b>
- [Single node benchmarks (2022) - Qdrant](https://qdrant.tech/benchmarks/single-node-speed-benchmark-2022/): Qdrant is an Open-Source Vector Database and Vector Search Engine written in Rust. It provides fast and scalable vector similarity search service with convenient API.
- [Filtered search benchmark - Qdrant](https://qdrant.tech/benchmarks/filtered-search-intro/): Qdrant is an Open-Source Vector Database and Vector Search Engine written in Rust. It provides fast and scalable vector similarity search service with convenient API.
- [- Qdrant](https://qdrant.tech/benchmarks/filtered-search-benchmark/): <b> Updated: Feb 2023 </b>

## Optional
- [Product Quantization in Vector Search | Qdrant - Qdrant](https://qdrant.tech/articles/product-quantization/): Discover product quantization in vector search technology. Learn how it optimizes storage and accelerates search processes for high-dimensional data.
- [Scalar Quantization: Background, Practices & More | Qdrant - Qdrant](https://qdrant.tech/articles/scalar-quantization/): Discover the efficiency of scalar quantization for optimized data storage and enhanced performance. Learn about its data compression benefits and efficiency improvements.
- [Binary Quantization - Vector Search, 40x Faster - Qdrant](https://qdrant.tech/articles/binary-quantization/): Binary Quantization is a newly introduced mechanism of reducing the memory footprint and increasing performance
- [https://qdrant.tech/articles/fastembed/fastembed-quickstart/](https://qdrant.tech/articles/fastembed/fastembed-quickstart/)
- [https://qdrant.tech/articles/fastembed/fastembed-semantic-search/](https://qdrant.tech/articles/fastembed/fastembed-semantic-search/)
- [https://qdrant.tech/articles/fastembed/fastembed-splade/](https://qdrant.tech/articles/fastembed/fastembed-splade/)
- [https://qdrant.tech/articles/fastembed/fastembed-colbert/](https://qdrant.tech/articles/fastembed/fastembed-colbert/)
- [Qdrant under the hood: io_uring - Qdrant](https://qdrant.tech/articles/io_uring/): Slow disk decelerating your Qdrant deployment? Get on top of IO overhead with this one trick!
- [https://qdrant.tech/articles/graph-rag-qdrant-neo4j/](https://qdrant.tech/articles/graph-rag-qdrant-neo4j/)
- [What is RAG: Understanding Retrieval-Augmented Generation - Qdrant](https://qdrant.tech/articles/what-is-rag-in-ai/): Explore how RAG enables LLMs to retrieve and utilize relevant external data when generating responses, rather than being limited to their original training data alone.
 
